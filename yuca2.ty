function
  scale(number s, row(3) r)
  return row(3)
  begin
     return r .*. s;
  end;

program
 use
  number x; # inicializado en 0
  number y; # inicializado en 0
 in
  use
   row(3) x;
   row(3) x1;
   col(3) y;
   matrix(3,3) z;
   matrix(3,3) q;
   matrix(3,3) s;
   matrix(3,3) s1;
   matrix(3,3) s3;
   matrix(2,2) s2;
   matrix(4,4) s22;
   matrix(3,3) s23;
   matrix(3,3) s4;
   matrix(3,3) s5;
   matrix(3,3) s6;
   matrix(3,3) s7;
   matrix(3,3) s8;
   matrix(3,3) s9;
   matrix(3,3) s10;
   matrix(3,3) s11;
   matrix(3,3) s12;
   matrix(3,3) s13;
   matrix(3,3) s14;
   matrix(3,3) s15;
   matrix(3,3) s16;
   boolean     a;
  in
  
   set x = { 1 , 2 , 3  };
   set y = { 1 : 2 : 3 };

   set z = { 4 , 5 , 1   :  6, 7, 2   :  8 , 9, 3 };

   set q = { 3 , 2 , 5   :  2, 1, 3   :  4 , 5, 2 };
   
   set a = z /= q;

   set s = z + q;
   set x1 = x + y';
   set s1 = z - q;
   set s2 = {1,2 : 3,4} * {3,4: 1,2};
   set s22 = {1,2,3,4 : 1,2,3,4 : 1,2,3,4: 1,2,3,4} * {4,3,2,1 : 4,3,2,1 : 4,3,2,1: 4,3,2,1};
   set s23 = {1,2,3 : 3,5,2 : 7,4,1} * {6,4,3 : 7,2,1 :4,7,2} ;
   set s3 = s1';
   set s4 = -s3;

   ##cruzados
   set s5 = z .+. 3;
   set s6 = z .-. 3;
   set s7 = 3 .-. z;
   set s8 = z .*. 3;

   set s9  = z ./. 3;
   set s10 = 3 ./. z;

   set s11 = 3 .%. z;
   set s12 = z .%. 3; #sigue mal

   set s13 = 3 .div. z;
   set s14 = z .div. 3; #sigue mal

   set s15 = 3 .mod. z;
   set s16 = z .mod. 3; #sigue mal

   #los que dan errores
         #print "Print 1", x; # x es del tipo especificado por matrix(1, 3)
  end;
 end;
end;
